/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* dummy = new ListNode(-1); // Dummy node to simplify the process
        ListNode* current = dummy;         // Pointer to track the current position

        while (list1 != nullptr && list2 != nullptr) {
            if (list1->val <= list2->val) {
                current->next = list1;     // Append list1's node
                list1 = list1->next;       // Move list1 forward
            } else {
                current->next = list2;     // Append list2's node
                list2 = list2->next;       // Move list2 forward
            }
            current = current->next;       // Move current pointer forward
        }

        if(list1 != nullptr)
        {
            current -> next = list1;
        }
        else
        {
            current -> next = list2;
        }

        return dummy->next; // Return the merged list, skipping the dummy node
    }
};
